@model List<OrderPro.UI.Models.FtpsFile>
@using OrderPro.UI.Models
@using System.Collections.Generic

@{   

    int i = 0;
    List<Imagetag> imagetag = new List<Imagetag>();                                      
    string OrderReference=ViewBag.OrderRef;
    int TotalImage = ViewBag.TotalImage;
    string SmallName = "";
    
    
  }

<div class="row rowContent">

<div class="col-xs-5 col-sm-5 col-md-5">
        <div class="form-group ">
            <label class="service-title">2. Select image complexity</label>
            <ul class="select_format">
              @if (ViewBag.Complexity != null)
              {
               foreach (var service in ViewBag.Complexity)
                {                                            
                <li><span class="radio-button">
                <input type="radio" id="@service.Reference" name="services" onclick="SelectComplexity(this.id)">
                <label><span class="send-quote new-one">@service.Level (@service.Description)</span></label></span></li>                    
                }
              }                              
           </ul>
        </div>

        <div class="form-group ">
            <label class="service-title">3. Select your preferred file format</label>
            <ul class="select_format">
                <li>                   
                    <input type="checkbox" class="radio" value="JPG" id="jpg" name="format[]" required="required" onclick="PreferredFormat(this.id)"><label><span class="send-quote new-one">JPG</span><span class="option-text">Ready to use</span></label></li>
                <li>
                    <input type="checkbox" class="radio" value="PNG" id="png" name="format[]" required="required" onclick="PreferredFormat(this.id)"><label><span class="send-quote new-one">PNG</span><span class="option-text">Ready to use</span></label></li>
                <li>
                    <input type="checkbox" class="radio" value="PSD" id="psd" name="format[]" required="required" onclick="PreferredFormat(this.id)"><label><span class="send-quote new-one">PSD</span><span class="option-text">Ready to use</span></label></li>
                <li>
                    <input type="checkbox" class="radio" value="Any Format" id="Any Format" name="format[]" required="required" onclick="PreferredFormat(this.id)"><label><span class="send-quote new-one">Any format</span><span class="option-text">Ready to use</span></label></li>
            </ul>
        </div>

        <div class="form-group ">
            <label class="service-title">4. Enter specific instructions (If any)</label>            
            <textarea id="instruction" name="specificinstruction" maxlength="50" class="intruction_area" placeholder="Enter your instructions"></textarea>
        </div>
       
  @*      <div class="form-group">
              <div id="imgLoad">
              <a id="Apply"  class="btn btn-primary btn-md" role="button">Apply</a>  
              <a id="Cancel"  class="btn btn-default btn-md" role="button">Cancle</a> 
              </div>
              <div id="load2" style="display:none">
              <img src="~/Images/loading.gif" height="70" />
              </div>
                    
        </div>*@
    </div>

<div class="col-xs-7 col-sm-5 col-md-7">
       
        <div class="row Insheader">
         <span>  Select the images and specify the complexity and preferred file formats</span>
        </div>
        <div class="row imagePreview">

            @foreach (var item in Model)
            {
                <span class="col-sm-3 col-xs 3 imgview">                 
                
                    <h6>
                        @if (item.Name.Length > 13)
                        {
                            //.jpeg,.jpg,.png,.gif,.JPG,.PSD,.tif                                                       
                            SmallName = item.Name.Substring(0, 10) + "..";
                        }
                        else
                        {
                            SmallName = item.Name;
                        }
                        @SmallName
                    </h6>

                    <img id="@item.Id" style="width:80%;height:70%" class="DisImg" src="@Url.Action("Thumbnail", "Home", new { width = 200, height = 200, ClientCode = ViewBag.ClientCode, Ordername = ViewBag.OrderNumber, ImageName = item.Name })" alt="@item.Name" />  @*onclick="SelectImage(this.id,@item.lblId)"*@
                    <br />
                    <label id="@item.lblId" class="lblImg" style="font-size: small; text-align: left;">
                        
                    </label>             
                    </span>               
            }
        </div>

        <div class="row" style="padding-top:5px">

            <div class="col-xs-5" style="padding-left:0px !important;">
               @* <a id="AllSelection" class="hyperlink">Select All</a>    
                <a id="ClearSelection" class="hyperlink">Clear All</a> *@
            </div>
            

            <div class="col-xs-4"><span>Total Images</span></div>
            <div class="col-xs-2"><span>Uploaded:@ViewBag.TotalImage</span></div>

           

        </div>
       
          <input type="text" id="totalImage" style="display:none" value="@ViewBag.TotalImage" />
          @Html.Hidden("OrderRef",(string)ViewBag.OrderRef)     
          @Html.Hidden("UserEmail",(string)ViewBag.UserName)
          @Html.Hidden("OrderNo",(string)ViewBag.OrderNo)     
          @Html.Hidden("ServiceName",(string)ViewBag.serviceName)
          @Html.Hidden("ServiceRef",(string)ViewBag.ServiceRef)         

            <div class="row" style="text-align:right;padding-top:15px;margin-right:5px">
                <div id="Sendbtn">
                    <a id="order" class="btnNext">CONTINUE</a>                    
                </div>
                <div id="load" style="display: none">
                    <img src="~/Images/loading.gif" height="70" />
                </div>
            </div>
    </div>        
</div>

 <script>
     //global variable
     var selectedImageId = "";
     var Complexity = "";
     var DeliveryFormat = "";
     var things = [];
     var AllImages = new Array();
     var GlobalModel;
   

   $(document).ready(function () {
    GlobalModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))';
    GlobalModel = JSON.parse(GlobalModel);
    $.each(GlobalModel, function (index, data) {     

        AllImages[index] = new Array(2);       
        AllImages[index][0] = data.lblId;;
        AllImages[index][1] = data.Id     

    });
});

$("#AllSelection").click(function () {
    console.log('Hitted All Image Length:' + AllImages.length);
    things = [];//newlly declared

    for (var i = 0; i < AllImages.length; i++) {
        //To do add AllImage data in things object      
        var lblId = AllImages[i][0];
        var imgId = AllImages[i][1];
        things.push({ id: lblId, imageId: imgId });
        document.getElementById(imgId).className = "shadow";
    }
});

$('input.radio').on('change', function () {
    $('input.radio').not(this).prop('checked', false);
});

$("#Apply").click(function () {
    console.log('hited');

    var ins = document.getElementById("instruction").value;
    var orderRef = document.getElementById("OrderRef").value;
    var lblId;
    if (things.length < 1)  
        alert("Please select Images for add instruction !!");       
    else if (Complexity == null || Complexity == "")
        alert("Select a Complexity.");
    else if (DeliveryFormat == null || DeliveryFormat == "")
        alert("Select a Delivery Format.");

    else {

        DisableButton();      
        try {           
            things = JSON.stringify({ 'things': things, 'OrderRef': orderRef, 'Instruction': ins, 'Complexity': Complexity, 'PreferredFormat': DeliveryFormat });
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("AddInstruction", "Home")',   
                data: things,
                traditional: true,
                success: function (result) {
                   
                    if (result.message = "True") {                                           
                        document.getElementById('_Specified').innerText = result.Specified;
                        things = [];                      

                        $.each(result.ImageList, function (index, item) {                       

                        document.getElementById(""+item.lableId+"").innerHTML = '<div><p>' + item.Instruction + '</p><p>Complexity:' + item.Complexity + '</p><p>' + result.DeliveryFormat + '</p></div>';
                        document.getElementById(item.ImgId).className = "remove";                          

                        console.log('Can not add inner html for Index.' + index + ' for lable :' + item.lableId);
                        });

                    } else {
                        console.log('After Failed result:' + result.message + ' Image List length:' + images.length);
                        RemoveSelectedImage();
                        alert("Instruction saved failed.Error:" + result.message + "! Try again..");
                    }
                   
                    EnableButton();
                },

                error: function (jqXHR, exception) {

                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.Try again.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404].Try again.' + exception.message;
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].Try again.';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.Try Again.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.Try Again';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.Try Again.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    alert("Can not add Instruction.Error:" + msg);
                    RemoveSelectedImage();
                    EnableButton();
                }
            });

        } catch (err) {
            RemoveSelectedImage();
            alert(err.message);
            EnableButton();
        }
       
    }
});

$("#Cancel").click(function () {
    if (things.length > 0) {

        //To do if array has then check is the lable id has any html content if not then delete this row from array list
        //because this image does not provide any complexity
        //Cancel Instruction complxcity
        var orderRef = document.getElementById("OrderRef").value;
        var totalImage = document.getElementById("totalImage").value;
        if (things != null) {

            try {
                console.log('before cancel Instruction.');
                //now check from client if any
                DisableButton();

                things = JSON.stringify({ 'things': things, 'OrderRef': orderRef, 'TotalImage': totalImage });
                $.ajax({

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: '@Url.Action("RemoveInstruction","Home")',
                    data: things,                 

                    success: function (result) {

                        if (result.message === "True") {

                        console.log('After Cancel success result:' + result.message + ' Specified:' + result.Specified);

                        document.getElementById('_Specified').innerText = result.Specified;
                        things = [];

                        $.each(result.ImageList, function (index, item) {

                                //index is row and item contains data
                                //alert('ImgId :' + item.ImgId);
                                //alert('lableId :' + item.lableId);
                                //alert('Instruction :' + item.Instruction);
                                //alert('Complexity :' + item.Complexity);

                                document.getElementById(item.ImgId).className = "remove";
                                document.getElementById(item.lableId).innerHTML = "";
                            });                           
                        }
                        else if (result.message == "") {
                            // RemoveSelectedImage()
                            console.log('Cancel result:' + result.message);
                        }
                        else {
                            // RemoveSelectedImage();
                            console.log('Cancel result:' + result.message);
                            alert("Instruction Cancelled failed! Try again..");
                        }
                        EnableButton();
                    },


                    error: function (jqXHR, exception) {
                        console.log('Cancel result:' + result.message);
                        //RemoveSelectedImage();
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.Try again.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404].Try again.';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].Try again.';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.Try Again.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.Try Again';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.Try Again.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        alert("Error:" + msg);

                        EnableButton();
                    }
                });

            } catch (err) {

                // RemoveSelectedImage();
                alert(err.message);
                EnableButton();
            }
        } else {

            alert("Please select image for cancel instruction.");
        }

        RemoveSelectedImage();

    } else {

        alert("Please select images to remove their Instruction!");
    }

    RemoveSelectedImage();


});

$("#ClearSelection").click(function () {
    console.log('Image List length:' + things.length);
    //remove border shawdow
    RemoveSelectedImage();
});


$('#order').click(function () {

    try {

        console.log('Click Order Pre Complexity:'+Complexity+' Preferred Format:'+DeliveryFormat);


        //check if any file upload or not
        var instruction = document.getElementById("instruction").value;
        var totalImage = document.getElementById("totalImage").value;

        var orderRef = document.getElementById("OrderRef").value;
        var userEmail = document.getElementById("UserEmail").value;
        var serviceRef = document.getElementById("ServiceRef").value;

       // console.log("Order ref" + OrderRef + " total Image:" + totalImage + " user:" + userEmail);


        if (Complexity == "" || Complexity == null)
            alert("Select image complexity");
        else if (DeliveryFormat == null || DeliveryFormat == "")
            alert("Select your preferred file format.");
        else {

          //if (Complexity != "" && Complexity != null) {  //instruction != "" && instruction != null &&

          //console.log("Hit Instruction Successful.");
            DisableButton();

            $.ajax({

                type: 'GET',
                url: '@Url.Action("OrderPre", "Home")',

                data: {
                    ServiceRef: serviceRef,
                    UserName: userEmail,
                    OrderRef: orderRef,
                    instruction: instruction,
                    ComplexityRef: Complexity,
                    PreferredFormat: DeliveryFormat
                },
                dataType: "html",
                contentType: "application/x-www-form-urlencoded; charset=UTF-8", // this is the default value, so it's optional

                success: function (result) {

                    $("#target").html(result);
                    EnableButton();

                },

                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.Try again.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404].Try again.';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].Try again.';
                    } else if (jqXHR.status === 504) {
                        msg = 'Gate way Time out problem.Try again';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.Try Again.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.Try Again';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.Try Again.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }

                    EnableButton();
                    alert("Error:" + msg);
                }

            });
            //} else {

            //    EnableButton();
            //    alert('Add Instruction and Complexity!!');
            //}


            return false;
        }
    } catch (err) {
        EnableButton();       
        console.log(err.message);
        return false;
    }
})



@*$('#order').click(function () {

    try {

        console.log('Click Order Pre');


        //check if any file upload or not
        var instruction = document.getElementById("instruction").value;
        var totalImage = document.getElementById("totalImage").value;

        var orderRef = document.getElementById("OrderRef").value;
        var userEmail = document.getElementById("UserEmail").value;
        var serviceRef = document.getElementById("ServiceRef").value;

        console.log("Order ref" + OrderRef + " total Image:" + totalImage + " user:" + userEmail);

        if (Complexity != "" && Complexity != null) {  //instruction != "" && instruction != null &&

            console.log("Hit Instruction Successful.");
            DisableButton();
            $.ajax({

                type: 'GET',
                url: '@Url.Action("VarifiedInstruction", "Home")',

                data: {
                    OrderRef: orderRef,
                    TotalImage: totalImage

                },
                traditional: true,
                contentType: 'application/json; charset=utf-8',

                //,string

                success: function (result) {

                    // alert(result.message);
                    console.log("Hit Order Successful.Result" + result.message);
                    if (result.message === "True") {

                        var url = "@Url.Action("OrderPre", "Home")";
                        console.log("After Url." + url);
                        // var name = 'from checkout'; //pass parameter
                        $.get(url, { ServiceRef: serviceRef, UserName: userEmail, OrderRef: orderRef }, function (data) {

                            //  EnableButton();

                            $("#target").html(data);
                            EnableButton();
                        });

                    } else if (result.message === "SetAllImageComplexity") {
                        alert('Some Image are not set Complexity!!');
                        EnableButton();
                    }
                    else if (result.message === "PleaseAddComplexity") {
                        alert('Please add Complexity and Delivery format for all Images!!');
                        EnableButton();
                    } else if (result.message === "Can not find Order Reference!") {
                        alert('Can not find Order Reference.Please try again or Contact with us.');
                        EnableButton();
                    }
                    else {

                        alert(result.message);
                        EnableButton();
                    }
                    //Enable Next Button

                    //document.getElementById("load").style.display = "none";
                    //document.getElementById("Sendbtn").style.display = "block";
                },

                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.Try again.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404].Try again.';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].Try again.';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.Try Again.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.Try Again';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.Try Again.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    alert("Error:" + msg);

                    EnableButton();
                    //document.getElementById("load").style.display = "none";
                    //document.getElementById("Sendbtn").style.display = "block";
                }
            });

        } else {

            //EnableButton();
            //document.getElementById("load").style.display = "none";
            //document.getElementById("Sendbtn").style.display = "block";
            alert('Add Instruction and Complexity!!');
        }


        return false;
    } catch (err) {
        EnableButton();
        //document.getElementById("load").style.display = "none";
        //document.getElementById("Sendbtn").style.display = "block";
        console.log(err.message);
        return false;
    }
})*@



function DisableButton() {
    //Disable Next button after uploading image enable this
    document.getElementById("load").style.display = "block";
    //document.getElementById("load2").style.display = "block";

    document.getElementById("Sendbtn").style.display = "none";
    //document.getElementById("imgLoad").style.display = "none";

}

function EnableButton() {
    //Enable Next Button
    document.getElementById("load").style.display = "none";
    //document.getElementById("load2").style.display = "none";

    document.getElementById("Sendbtn").style.display = "block";
    //document.getElementById("imgLoad").style.display = "block";

}

function hasInstruction() {
    var value = document.getElementById("order_name").value;
    if (value.length > 50) {
        alert("Max length exists.");
    }
}

function hasOrderName() {
    var value = document.getElementById("instruction").value;
}


function SelectComplexity(e) {
    Complexity = e;
    //alert(Complexity);
}

function SelectImage(e, i) {

    console.log('img id:' + e + ' lable id:' + i)
    var className = "shadow";
    var hasClass = document.getElementById(e).className.match(className);  //new RegExp('(\\s|^)' + className + '(\\s|$)')
    console.log('has class:' + hasClass);

    var index = i;
    var imageId = e;

    if (hasClass != className) {

        try {
            console.log('add image into list because class does not match')

            things.push({ id: i, imageId: e });

            document.getElementById(e).className = "shadow";

        } catch (err) {
            alert('Class Add error:' + err);
        }
    }
    else {
        console.log('hit else condition because class matched.');
        try {

            var listToDelete = [i];        //['abc', 'efg'];

            things.reduceRight(function (acc, obj, idx) {
                if (listToDelete.indexOf(obj.id) > -1)
                    things.splice(idx, 1);
            }, 0);

            document.getElementById(e).className = "remove";

        } catch (err) {
            alert('Class remove err:' + err.message);
        }
    }

}

function PreferredFormat(e) { DeliveryFormat = e; }

function RemoveSelectedImage() {
    console.log(' length' + things.length);
    //remove border shawdow
    for (var i = 0; i < things.length; i++) {  // arr.length
        try {

            //array pop
            console.log('first array lable id:' + things[i].id + ' Image Id:' + things[i].imageId);

            //split the array
            //var res = arr[i].split(",");
            var imgId = things[i].imageId;                   //res[0];
            var lblId = things[i].id;                    //res[1];

            // alert('Image Id:' + imgId + ' lable Id:' + lblId + '  Index:' + i);      document.getElementById(lblId).innerHTML = "";

            console.log('Image Id:' + imgId + ' lable Id:' + lblId);
            document.getElementById(imgId).className = "remove";



        } catch (err) {

            console.log('exception:' + err.message);
        }
    }

    //declare array new object so previous will be null
    //arr = new Array();
    things = [];

    console.log('Js list Object newly declared:' + things.length);
}
 </script>



