@model List<OrderPro.UI.Models.FtpsFile>
@using OrderPro.UI.Models
@using System.Collections.Generic

@{   

    int i = 0;
    List<Imagetag> imagetag = new List<Imagetag>();                                      
    string OrderReference=ViewBag.OrderRef;
    int TotalImage = ViewBag.TotalImage;
    string SmallName = "";

    List<OrderPro.UI.Models.FtpsFile> ImageList = Model;         
 
 }

<style>
    .dz-max-files-reached {
        background-color: red;
    }
  /*for radio button*/
         
label.btn span {
  font-size: 1.5em ;
}

label input[type="radio"] ~ i.fa.fa-circle-o{
    color: #c8c8c8;    display: inline;
}
label input[type="radio"] ~ i.fa.fa-check-circle-o{
    display: none;
}
label input[type="radio"]:checked ~ i.fa.fa-circle-o{
    display: none;
}
label input[type="radio"]:checked ~ i.fa.fa-check-circle-o{
    color: #7AA3CC;    display: inline;
}
label:hover input[type="radio"] ~ i.fa {
color: #7AA3CC;
}

label input[type="checkbox"] ~ i.fa.fa-square-o{
    color: #c8c8c8;    display: inline;
}
label input[type="checkbox"] ~ i.fa.fa-check-square-o{
    display: none;
}
label input[type="checkbox"]:checked ~ i.fa.fa-square-o{
    display: none;
}
label input[type="checkbox"]:checked ~ i.fa.fa-check-square-o{
    color: #7AA3CC;    display: inline;
}
label:hover input[type="checkbox"] ~ i.fa {
color: #7AA3CC;
}

div[data-toggle="buttons"] label.active{
    color: #7AA3CC;
}

div[data-toggle="buttons"] label {
display: inline-block;
padding: 6px 12px;
margin-bottom: 0;
font-size: 14px;
font-weight: normal;
line-height: 2em;
text-align: left;
white-space: nowrap;
vertical-align: top;
cursor: pointer;
background-color: none;
border: 0px solid 
#c8c8c8;
border-radius: 3px;
color: #c8c8c8;
-webkit-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
-o-user-select: none;
user-select: none;
}

div[data-toggle="buttons"] label:hover {
color: #7AA3CC;
}

div[data-toggle="buttons"] label:active, div[data-toggle="buttons"] label.active {
-webkit-box-shadow: none;
box-shadow: none;
}

   /*end radio button*/

    .potentional_info {
    
    font-size: 15px !important;
    }
</style>

<link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" rel="stylesheet">

    <style>
        .shadow {
         border:1px solid black;
         /*width:95% !important;*/
         -webkit-box-shadow: 0px 3px 15px 6px rgba(85,120,224,0.79);
         -moz-box-shadow: 0px 3px 15px 6px rgba(85,120,224,0.79);
         box-shadow: 0px 3px 15px 6px rgba(85,120,224,0.79);
        }

        .remove {
        border:none;
        /*width:100% !important;*/
        -webkit-box-shadow:none;
        -moz-box-shadow:none;
        box-shadow:none;
        }

        .complexity {
        border:1px solid #ede4e4;
        min-height: 10px !important; 
        width: 130px !important; 
        border-radius: 25px; 
        }

        .labels {
        height:23px;
        font-size: 14px; 
        font-weight: bold;
        color: white !important; 
        background-color: #8091f5;
        margin-top:8px;
        margin-bottom:5px;
        border-radius: 6px; 
        text-align:center !important;
        }


        .left_sidebar {
        margin:0 0 0 5px !important;
        
        }
        .image_container {
         margin:0px !important;
         width:600px !important;
         float:right !important;        
        }

        .uploaded-image-instruction {        
        padding:0px !important;
        }
    </style>


<section class="container">
    <form class="order_form" action="#">
        <aside class="left_sidebar">                  
            
            <label>Order Instruction<span style="color: red;">*</span></label>
            <textarea placeholder="Write your general instruction for this order" id="instruction" style="width:90% !important;height:100px !important" rows="2" cols="30" required="required" maxlength="50" onkeyup="hasInstruction()"></textarea>
           
                          
            <div>

                <label class="labels">
                  <pre>Select Complexity</pre>
                </label>
                @if (ViewBag.Complexity != null)
                {
                    foreach (var service in ViewBag.Complexity)
                    {
                    
                    <div class="selection_box cmplx complexity">
                        <label style="text-align:center" id="@service.Reference" onclick="SelectComplexity(this.id)">
                            <input name="services" type="radio" style="display: none" />
                            <i class="fa fa-circle-o fa-2x"></i>
                            <i class="fa fa-check-circle-o fa-2x"></i>
                        </label>
                        <h2>@service.Level</h2>
                        <span class="pricing">$ @service.AdditionalRate per image</span>
                        <p class="potentional_info">@service.Description<a href="javascript:void(0)" class="sample-image" id="sample-11">[sample]</a></p>
                        <!--undefined-->

                    </div>  
                    }
                }
            </div>
          
    
            <div>
                <label class="labels">
                    Choose Delivery format
                </label>
                <div class="selection_box complexity" id="div-1">
                    <label id="White Background" style="text-align: center" onclick="PreferredFormat(this.id)">
                        <input name="Format" type="radio" style="display: none" />
                        <i class="fa fa-circle-o fa-2x"></i>
                        <i class="fa fa-check-circle-o fa-2x"></i>
                    </label>
                    <h2>White Background</h2>
                    @* <span class="pricing">JPEG Format</span>*@
                    <p class="potentional_info">JPEG Format</p>

                </div>
                <div class="selection_box complexity" id="div-2">

                    @* <span class="pricing"></span>*@

                    <label id="Transparent" style="text-align: center" onclick="PreferredFormat(this.id)">
                        <input name="Format" type="radio" style="display: none" />
                        <i class="fa fa-circle-o fa-2x"></i>
                        <i class="fa fa-check-circle-o fa-2x"></i>
                    </label>
                    <h2>Transprent</h2>
                    <p class="potentional_info">PSD or TIFF</p>
                </div>

                <div class="selection_box complexity" id="div-3">

                    <label id="Layer Mask" style="text-align: center" onclick="PreferredFormat(this.id)">
                        <input name="Format" type="radio" style="display: none" />
                        <i class="fa fa-circle-o fa-2x"></i>
                        <i class="fa fa-check-circle-o fa-2x"></i>
                    </label>
                    <h2>Layer Mask</h2>
                    <p class="potentional_info">PSD or TIFF</p>
                </div>

                <div class="selection_box complexity" id="div-4">
                    <label id="Tolerance 0.5" style="text-align: center" onclick="PreferredFormat(this.id)">
                        <input name="Format" type="radio" style="display: none" />
                        <i class="fa fa-circle-o fa-2x"></i>
                        <i class="fa fa-check-circle-o fa-2x"></i>
                    </label>
                    <h2>Tolerance 0.5</h2>
                    <p class="potentional_info">White background</p>
                </div>

                <div class="selection_box complexity" id="div-5" style="float: left">
                    <label id="Clipping Path" style="text-align: center" onclick="PreferredFormat(this.id)">
                        <input name="Format" type="radio" style="display: none" />
                        <i class="fa fa-circle-o fa-2x"></i>
                        <i class="fa fa-check-circle-o fa-2x"></i>
                    </label>
                    <h2>Only Clipping path</h2>
                    <p class="potentional_info">Save in original file</p>
                </div>                
            </div>              
                      
           


            <div  style="float: left;padding-top:100px">
                <div id="imgLoad">
                    <a id="Apply" class="button left" style="font-size: 13px;" onclick="AddInstruction()">Apply</a>
                    <a id="Cancel" class="button left" style="font-size: 13px;" onclick="CancelInstruction()">Cancel</a>
                    <a id="ClearSelection" class="button left" style="font-size: 13px; width: 100px !important" onclick="DeselectImage()">Deselect Image</a>
                </div>
                <div id="load2" style="text-align:center;display:none">
                    <img src="~/Images/ellipsis.gif" height="70" />
                </div>
            </div>
            
        </aside>
        
    </form>
    <aside class="image_container">
        <div class="uploaded-image-instruction" style="text-align:justify">
            You can also add instruction for each individual image.Click up on each image.then select Complexity and Delivery format.
            Then click Apply button.To cancel any instruction simply select the image and click Cancel button.
        </div>
     
        <div class="uploaded_img">
              @foreach(var item in Model)
                  {
                  
                      //var path = string.Format("{0}\\{1}",pathString,item.EditedName); width:80px;height:70px;
                    <span class="uploaded-preview spanss" style="margin:auto !important;text-align:center;padding:10px 0px 35px 15px !important;" >  @*10px 0px 35px 15px*@
                        <h6>
                            @if (item.Name.Length > 13)
                            {
                                string[] s = item.Name.Split('.');
                                SmallName = s[0].Substring(0, 5) + ".." + s[1];
                            }
                            else
                            {
                                SmallName = item.Name;
                            }
                            @SmallName
                        </h6>
                        
                         <img id="@item.Id" class="DisImg" src="@Url.Action("Thumbnail", "Home", new { width = 200, height = 200, ClientCode = ViewBag.ClientCode, Ordername = ViewBag.OrderNumber, ImageName = item.Name })" width="94%" height="80%" alt="@item.Name" />  @*onclick="SelectImage(this.id,@i)"*@
                         <label id="@i" class="lblImg" style="font-size: small; text-align: left;">
                        </label>
                    </span>                  
                  
                      i++;
                  }
             </div>
    </aside>
    <br>
    <section class="taskProgressor bottom">
                

     @* <input type="text" style="display:none" id="OrderRef" value="@ViewBag.OrderRef" />
      
      <input type="text" id="UserEmail" value="@ViewBag.UserName" style="display:none" />*@
      
      <input type="text" id="totalImage" style="display:none" value="@ViewBag.TotalImage" />
      @Html.Hidden("OrderRef",(string)ViewBag.OrderRef)     
      @Html.Hidden("UserEmail",(string)ViewBag.UserName)
      @Html.Hidden("OrderNo",(string)ViewBag.OrderNo)
      @Html.Hidden("ServiceName",(string)ViewBag.serviceName)
      @Html.Hidden("ServiceRef",(string)ViewBag.ServiceRef)             
        
  

        <div class="buttonset" style="bottom: 230px;">
            <div id="Sendbtn">
                <a id="order" class="button right">Next <span class="arrow">»</span> </a>
            </div>
            <div id="load" style="text-align: center;display:none">
                <img src="~/Images/ellipsis.gif" height="70" />
            </div>

        </div>       
 
    </section>

            
</section>

    <script>
        //global variable
        var selectedImageId = "";
        var Complexity = "";
        var DeliveryFormat = "";
             
        //var arr = new Array();    

       // var images = [];  //javascript object can pass 500 list of file that array does not
        var things = [];
       
        $('#order').click(function () {
          
            try {
               
                console.log('Click Order Pre');
                                
             
                //check if any file upload or not
                var instruction = document.getElementById("instruction").value;                  
                var totalImage = document.getElementById("totalImage").value;
                
                var orderRef = document.getElementById("OrderRef").value;
                var userEmail = document.getElementById("UserEmail").value;
                var serviceRef=document.getElementById("ServiceRef").value;

                console.log("Order ref"+OrderRef+" total Image:"+totalImage+" user:"+userEmail);

                if (Complexity != "" && Complexity != null) {  //instruction != "" && instruction != null &&           
                           
                    console.log("Hit Instruction Successful.");                   
                    DisableButton();
                    $.ajax({                       

                        type: 'GET',
                        url: '@Url.Action("VarifiedInstruction","Home")',                

                        data: {
                            OrderRef: orderRef,
                            TotalImage: totalImage

                        },
                        traditional: true,
                        contentType: 'application/json; charset=utf-8',

                        //,string 

                        success: function (result) {

                            // alert(result.message);
                            console.log("Hit Order Successful.Result"+result.message);
                            if (result.message === "True") {

                                var url = "@Url.Action("OrderPre","Home")";
                                console.log("After Url." + url);
                                // var name = 'from checkout'; //pass parameter
                                $.get(url, {ServiceRef:serviceRef,UserName:userEmail,OrderRef:orderRef}, function (data) {

                                  //  EnableButton();

                                    $("#target").html(data);
                                    EnableButton();
                                });

                            } else if (result.message === "SetAllImageComplexity") 
                                {
                                    alert('Some Image are not set Complexity!!');
                                    EnableButton();
                                }
                            else if (result.message === "PleaseAddComplexity") {
                                alert('Please add Complexity and Delivery format for all Images!!');
                                EnableButton();
                            } else if (result.message === "Can not find Order Reference!") {
                                alert('Can not find Order Reference.Please try again or Contact with us.');
                                EnableButton();
                            }
                            else {

                                alert(result.message);
                                EnableButton();
                            }
                            //Enable Next Button
                             
                            //document.getElementById("load").style.display = "none";
                            //document.getElementById("Sendbtn").style.display = "block";
                        },

                        error: function (jqXHR, exception) {                          
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.Try again.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404].Try again.';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].Try again.';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.Try Again.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.Try Again';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.Try Again.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            alert("Error:" + msg);

                            EnableButton();
                            //document.getElementById("load").style.display = "none";
                            //document.getElementById("Sendbtn").style.display = "block";
                        }
                    });             
              
                } else {

                    //EnableButton();
                    //document.getElementById("load").style.display = "none";
                    //document.getElementById("Sendbtn").style.display = "block";
                    alert('Add Instruction and Complexity!!');         
                }

               
                return false;
            } catch (err)
            {
                EnableButton();
                //document.getElementById("load").style.display = "none";
                //document.getElementById("Sendbtn").style.display = "block";
                console.log(err.message);
                return false;
            }
        })


        function DisableButton()
        {
            //Disable Next button after uploading image enable this
            document.getElementById("load").style.display = "block";
            document.getElementById("load2").style.display = "block";

            document.getElementById("Sendbtn").style.display = "none";
            document.getElementById("imgLoad").style.display = "none";

        }

        function EnableButton()
        {
            //Enable Next Button
            document.getElementById("load").style.display = "none";
            document.getElementById("load2").style.display = "none";

            document.getElementById("Sendbtn").style.display = "block";
            document.getElementById("imgLoad").style.display = "block";

        }

        function hasInstruction()
        {
            var value = document.getElementById("order_name").value;
            if (value.length>50)
            {
                alert("Max length exists.");            
            }
        }

        function hasOrderName()
        {
            var value = document.getElementById("instruction").value;
        }
             
               
        function SelectComplexity(e) {
            Complexity = e;
            //alert(Complexity);
        }

        //arr[i] = new Array(2);                
        //arr[i][0] = e.toString();
        //arr[i][1] = i.toString();       
       
        function SelectImage(e, i) {
      
        console.log('img id:' + e + ' lable id:' + i)       
         var className = "shadow";
         var hasClass = document.getElementById(e).className.match(className);  //new RegExp('(\\s|^)' + className + '(\\s|$)')
         console.log('has class:'+hasClass);

         var index = i;
         var imageId = e;
        
         if (hasClass != className)
         {

             try {
                 console.log('add image into list because class does not match')             
              
                 things.push({ id: i, imageId: e });
                           
                 document.getElementById(e).className = "shadow";

               

             } catch (err)
             {
                 alert('Class Add error:'+err);
             }
         }
         else
         {
             console.log('hit else condition because class matched.');
             try {

                 var listToDelete = [i];        //['abc', 'efg'];

                 things.reduceRight(function (acc, obj, idx) {
                     if (listToDelete.indexOf(obj.id) > -1)
                         things.splice(idx, 1);
                 }, 0);               
                                       
                 document.getElementById(e).className = "remove";

             } catch (err) {
                 alert('Class remove err:' + err.message);
             }
         }
        
        }

        function PreferredFormat(e) {
            DeliveryFormat = e;
            //alert(DeliveryFormat);
        }
      
        function returnImageList()
        {
           return @ImageList;
        }


        function AddInstruction()
        {

            var ins = document.getElementById("instruction").value;

            //if (things.length < 1)   //arr.length < 1
            //    alert("Please select Images for add instruction !!");
           //else if (ins == null || ins == "")
           //     alert("Please insert your instruction !!");
           if (Complexity == null || Complexity == "")
                alert("Select a Complexity.");
            else if(DeliveryFormat==null || DeliveryFormat=="")
                alert("Select a Delivery Format.");
         
            else {

                DisableButton();

                //ajax call to add instruction
                try {
                    //console.log('before hit.display all Images');                    

                    //for (var i = 0; i <things.length; i++)
                    //{
                    //    console.log('id:' + things[i].id + ' img id:' + things[i].imageId);
                    //}

                    var Model=returnImageList();
                    things = JSON.stringify({ 'model':Model , 'Instruction': ins, 'Complexity': Complexity, 'PreferredFormat': DeliveryFormat });
                    $.ajax({

                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            type: 'POST',
                            url: '@Url.Action("AddInstructionAll","Home")',    //'/Home/AddInstruction',
                            data: things,
                                            // 
                                
                           // traditional: true,
                          
                                        
                  
                        success: function (result)
                        {
                            console.log('After success result:' + result.message);
                            if (result.message = "True") {
                                
                               
                               // alert('arr: ' + arr);
                                //arr = new Array();
                                things = [];
                                console.log('assigning new list of obj :' + things.length);

                                $.each(result.ImageList, function (index, item) {
                                    //index is row and item contains data

                                    //alert('ImgId :' + item.ImgId);
                                    //alert('lableId :' + item.lableId);
                                    //alert('Instruction :' + item.Instruction);
                                    //alert('Complexity :' + item.Complexity);

                                    document.getElementById(item.ImgId).className = "remove";
                                    document.getElementById(item.lableId).innerHTML = '<div style="background-color:#18c12b;color:white;border:1px solid #18c12b;border-radius:2px;"><p>' + item.Instruction + '</p><p>Complexity:' + item.Complexity + '</p><p>' + result.DeliveryFormat + '</p></div>';
                                });

                               

                            } else {
                                console.log('After Failed result:' + result.message + ' Image List length:' + images.length);
                                RemoveSelectedImage();
                                alert("Instruction saved failed.Error:" + result.message + "! Try again..");
                               
                               
                            }

                            EnableButton();
                        },                       

                        error: function (jqXHR, exception) {
                            RemoveSelectedImage();
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.Try again.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404].Try again.'+exception.message;
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].Try again.';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.Try Again.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.Try Again';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.Try Again.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            alert("Can not add Instruction.Error:" + msg);

                            EnableButton();
                        }
                    });

                } catch (err)
                {
                    RemoveSelectedImage();
                    alert(err.message);
                    EnableButton();
                }
            }           
        }


        function DeselectImage()
        {
          
            console.log('Image List length:' + things.length);
            //remove border shawdow            
            RemoveSelectedImage();
        }

        function RemoveSelectedImage()
        {
            console.log(' length' + things.length);
            //remove border shawdow
            for (var i = 0; i < things.length; i++) {  // arr.length
                try {
               
                    //array pop
                    console.log('first array lable id:' + things[i].id + ' Image Id:' + things[i].imageId);
                   
                    //split the array
                    //var res = arr[i].split(",");
                    var imgId = things[i].imageId;                   //res[0];
                    var lblId = things[i].id;                    //res[1];

                    // alert('Image Id:' + imgId + ' lable Id:' + lblId + '  Index:' + i);      document.getElementById(lblId).innerHTML = "";                                     

                    console.log('Image Id:' + imgId + ' lable Id:' + lblId);
                    document.getElementById(imgId).className = "remove";
                         


                } catch (err)
                {
                   
                    console.log('exception:'+err.message);
                }
            }

            //declare array new object so previous will be null
            //arr = new Array();
            things = [];

            console.log('Js list Object newly declared:' + things.length);
        }


        function CancelInstruction()
        {
            if (things.length > 0) {

                //To do if array has then check is the lable id has any html content if not then delete this row from array list
                //because this image does not provide any complexity
                //Cancel Instruction complxcity
                                
               if (things != null) {

                        try {
                            console.log('before cancel Instruction.');
                        //now check from client if any 
                        DisableButton();                       

                        things = JSON.stringify({ 'things': things,'Ref':12 });
                        $.ajax({

                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            type: 'POST',
                            url: '@Url.Action("RemoveInstruction","Home")',            
                            data: things,
                            
                            //traditional: true,                          

                            success: function (result) {
                                if (result.message = "True") {

                                    console.log('Cancel result:' + result.message);                                    
                                    things = [];                                  

                                    $.each(result.ImageList, function (index, item) {
                                        //index is row and item contains data

                                        //alert('ImgId :' + item.ImgId);
                                        //alert('lableId :' + item.lableId);
                                        //alert('Instruction :' + item.Instruction);
                                        //alert('Complexity :' + item.Complexity);

                                        document.getElementById(item.ImgId).className = "remove";
                                        document.getElementById(item.lableId).innerHTML = ""; 
                                    });
                                }
                                else if (result.message == "") {
                                    RemoveSelectedImage()
                                    console.log('Cancel result:' + result.message);
                                }
                                else {
                                    RemoveSelectedImage();
                                    console.log('Cancel result:' + result.message);
                                    alert("Instruction Cancelled failed! Try again..");
                                }

                                EnableButton();

                            },

                            //error: function () {
                            //    console.log('Cancel result:' + result.message);
                            //    RemoveSelectedImage();
                            //    alert("error");
                            //}
                            error: function (jqXHR, exception) {
                                console.log('Cancel result:' + result.message);
                                RemoveSelectedImage();
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.Try again.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404].Try again.';
                                } else if (jqXHR.status == 500) {
                                    msg = 'Internal Server Error [500].Try again.';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.Try Again.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.Try Again';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.Try Again.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                alert("Error:" + msg);

                                EnableButton();
                            }
                        });

                        } catch (err) {

                            RemoveSelectedImage();
                            alert(err.message);
                            EnableButton();
                        }
                    } else {

                        alert("Please select image for cancel instruction.");
                    }
                

            } else {

                alert("Please select images to remove their Instruction!");
            }
        }

    </script>

