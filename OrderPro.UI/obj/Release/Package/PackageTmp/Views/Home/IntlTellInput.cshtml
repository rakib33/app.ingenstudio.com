@{
    ViewBag.Title = "IntlTellInput";
}
<link href="~/build/css/intlTelInput.css" rel="stylesheet" />
<link href="~/build/css/demo.css" rel="stylesheet" />
<h2>IntlTellInput</h2>@*"IntlTellInput", "Home", FormMethod.Post*@

<form>
    <input id="mobile-number" type="tel">
    <button type="submit">Submit</button>
</form>
        

<script src="http://code.jquery.com/jquery-latest.min.js"></script>
<script src="~/build/js/intlTelInput.min.js"></script>

<script>
$(function() {
$("#mobile-number").intlTelInput({
allowExtensions: true,
autoFormat: false,
autoHideDialCode: false,
autoPlaceholder: false,
defaultCountry: "auto",
ipinfoToken: "yolo",
nationalMode: false,
numberType: "MOBILE",
//onlyCountries: ['us', 'gb', 'ch', 'ca', 'do'],
//preferredCountries: ['cn', 'jp'],
preventInvalidNumbers: true,
utilsScript: "/build/js/utils.js"

});
});
</script>







@*help from http://formvalidation.io/examples/validating-international-phone-numbers/*@

<form id="contactForm" class="form-horizontal">
    <div class="form-group">
        <label class="col-xs-3 control-label">Phone number</label>
        <div class="col-xs-5">
            <input type="tel" class="form-control" name="phoneNumber" />
        </div>
    </div>
</form>

<script src="/vendor/intl-tel-input/build/js/intlTelInput.min.js"></script>
<script>
    $(document).ready(function () {
        $('#contactForm')
            .find('[name="phoneNumber"]')
                .intlTelInput({
                    utilsScript: '/vendor/intl-tel-input/lib/libphonenumber/build/utils.js',
                    autoPlaceholder: true,
                    preferredCountries: ['fr', 'us', 'gb']
                });

        $('#contactForm')
            .formValidation({
                framework: 'bootstrap',
                icon: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    phoneNumber: {
                        validators: {
                            callback: {
                                message: 'The phone number is not valid',
                                callback: function (value, validator, $field) {
                                    return value === '' || $field.intlTelInput('isValidNumber');
                                }
                            }
                        }
                    }
                }
            })
            // Revalidate the number when changing the country
            .on('click', '.country-list', function () {
                $('#contactForm').formValidation('revalidateField', 'phoneNumber');
            });
    });
</script>