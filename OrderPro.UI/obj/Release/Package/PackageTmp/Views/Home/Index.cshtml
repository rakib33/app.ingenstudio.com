@{
    ViewBag.Title = "Ingenstudio.com";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .pclass {
        margin-bottom:0px !important;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }
    .radionew {
        border: 1px solid #cecece !important;
    }
    /*.button-group {       
        float: none !important;
        padding:10px 25px 25px 25px;
        width:85% !important;
    }*/

    .drop {
        /*width:100% !important;*/
        /*min-height:90% !important;*/
        margin-left:40px !important;
        background-color:#e6e8e7 !important;
    }
    .middle {
        margin-top:40px !important;
        margin-bottom:30px !important;
    }
    .bottom-column {
        margin-top:40% !important;
        float: none;
        display: table-cell;
        vertical-align: bottom;
    }

    .rowBottom{
        margin-top:30% !important;
    }
    .hrheader {
      margin-top:0px !important;
      margin-left:20%;
      margin-right:20%;
    }
    /*.hed1 {
        margin-bottom:0px !important;
    }
    .hed2 {
        margin-top:0px !important;
    }*/
</style>

<div class="text-center">
    <h3>Welcome to E-Commerce Photo Editing Service</h3>
    <h5 class="hed1">Please select the service from the option below and upload your image files.</h5>
    <h5 class="hed2">If you need any assistance please <a class="alink" href="#"> Contact us</a> </h5>
    <hr class="hrheader"/>
    
   
</div>

<div class="button-group col-sm-offset-1">
    <ul>
        @if (ViewBag.ServiceList != null)
        {
            foreach (var service in ViewBag.ServiceList)
            {
                
           <li>
            <div class="service-3">
                <img src="~/Images/Service/@service.ServiceIcon" alt="" class="image-starting">
                <img src="~/Images/Service/@service.SelectedIcon" alt="" class="image-invisible">
                <h5>@service.Name</h5>
                <h6>@service.Description</h6>
                <div class="arrow">
                    <i class="fa fa-check" aria-hidden="true"></i>
                </div>
                <div class="radiobox-div style_new">
                    <input type="radio" class="radionew" name="services" id="@service.Reference" onclick="SelectService(this.id)" value="Remove Background" required="">
                </div>
            </div>
           </li>
                          
            }
        }
      
    </ul>
</div>

<div class="row middle">

    <div class="col-sm-7">
        <form action="@Url.Action("SaveUploadedFile", "Ftps")" class="dropzone drop" id="dropzoneJsForm"></form>
    </div>
    <div class="col-sm-5 bottom-column">       

        <div class="row rowBottom">

            <h4>INSTRUCTION</h4>
            <h5>1. You can upload only JPG/BMP/TIF/PNG format of any size</h5>
            <h5>2. Upload up to 200 images in a single order.If you have more</h5>
            <h5 style="margin-left: 1.2em">than 200 images,<a style="color:blue" href="#"> request for FTP</a></h5>
            <div class="checkbox checkbox-success">
                <input type="checkbox" id="checkbox3">
                <label for="checkbox3">
                    I prefere FTP to upload the files
                </label>
            </div>
          
        </div>
        <div style="padding-top:25px !important;text-align:right;padding-right:80px">
            <div id="Sendbtn">
                <a id="next" class="btnNext" onclick="calpage()">CONTINUE</a>
            </div>
            <div id="load" style="display: none">                           
                <img src="~/Images/loading.gif" height="70px" />
            </div>
        </div>

        @Html.Hidden("OrderNo", (string)ViewBag.OrderNumber)   @*this order no is needed to upload file.we pass Client Code and Order No to dropzone for file upload*@
        @Html.Hidden("ClientCode", (string)ViewBag.ClientCode)
        @Html.Hidden("UserEmail", (string)ViewBag.UserName)
        @Html.Hidden("OrderRef", (string)ViewBag.OrderRef) 

    </div>
</div>

<script type="text/javascript">

    //$('.radionew').click(function () {
    //    alert('click');
    //    $('input[name=services]:not(:checked)').parent().removeClass("style_new").parent().removeClass("service-new");
    //    $('input[name=services]:checked').parent().addClass("style_new").parent().addClass("service-new");
    //});


    var totalUpload = 0;
    var ServiceId = "";

    try {
        Dropzone.options.dropzoneJsForm = {

            maxFilesize: 500,//10240= 10 GB
            maxFiles: 200,
            paramName: "file",
            autoProcessQueue: true,
            parallelUploads: 2,
            //don't add this attribute parallelUploads: 5,and uploadMultiple: true, its causes upload same file each time

            //prevents Dropzone from uploading dropped files immediately
            //autoProcessQueue: false,

            acceptedFiles: ".jpeg,.jpg,.png,.gif,.JPG,.PSD,.tif",
            init: function () {


                //added 8-6-16
                //var submitButton = document.querySelector("#submit-all");
                // var myDropzone = this; //closure

                //send extra parameter value on action
                this.on("sending", function (file, xhr, formData) {
                    formData.append("OrderNo", $("#OrderNo").val());
                    formData.append("ClientCode", $("#ClientCode").val());
                });

                //submitButton.addEventListener("click", function () {
                //myDropzone.processQueue(); //tell Dropzone to process all queued files
                //});
                //end

                this.on("uploadprogress", function (file, progress) {
                    //Disable Next button after uploading image enable this
                    document.getElementById("load").style.display = "block";
                    document.getElementById("Sendbtn").style.display = "none";
                    console.log("File progress", progress);
                });

                this.on("complete", function (data) {
                    console.log('hit method complete');

                    //alert('Queued File:' + this.getQueuedFiles().length);
                    //alert('Uploaded File:' + this.getUploadingFiles().length);
                    if (this.getQueuedFiles().length == 0 && this.getUploadingFiles().length == 0) {
                        document.getElementById("load").style.display = "none";
                        document.getElementById("Sendbtn").style.display = "block";
                    }              

                });

                console.log("method complete exicute success");

                this.on("success", function (file, response) {
                    var imageSrc = response;
                    console.log('get response from server');
                    console.log('Server Response:' + response.Message);
                    console.log('Url Path:' + response.UrlPath);

                    if (response.Message === "success") {   //imageSrc == '/assets/images/offerfeatimg.jpg'
                        console.log("success");

                        totalUpload++;

                        //alert(totalUpload);

                        return file.previewElement.classList.add("dz-success");


                    }

                    else {
                        console.log('Server Responsed Failed:' + response.Message);

                        //folow this link display success or error
                        //http://stackoverflow.com/questions/20282392/invoking-an-error-from-server-response-json-in-dropzone-js
                        file.previewElement.classList.add("dz-error");
                        _ref = file.previewElement.querySelectorAll("[data-dz-errormessage]");
                        _results = [];
                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                            node = _ref[_i];
                            _results.push(node.textContent = "file upload error");
                        }

                        //$(".removebutton").show();

                        // Create the remove button
                        var removeButton = Dropzone.createElement("<button style='color:red'>Remove file</button>");
                        // Capture the Dropzone instance as closure.
                        var _this = this;

                        // Listen to the click event
                        removeButton.addEventListener("click", function (e) {
                            // Make sure the button click doesn't submit the form:
                            e.preventDefault();
                            e.stopPropagation();
                            // Remove the file preview.
                            _this.removeFile(file);
                            // If you want to the delete the file on the server as well,
                            // you can do the AJAX request here.
                        });

                        // Add the button to the file preview element.
                        file.previewElement.appendChild(removeButton);
                        //End creating remove button

                        return _results;

                    }
                    // this.removeFile(file); // This line removes the preview
                })
            }
        }
    }
    catch (err) {
        console.log('exception:' + err.message);
        console.log('Exp Url Path' + response.UrlPath);

        document.getElementById("load").style.display = "none";
        document.getElementById("Sendbtn").style.display = "block";
    }



    function TotalFile() {
        return totalUpload;
    }

    function SelectService(e) {
        //alert(e);
        ServiceId = e;
        $('input[name=services]:not(:checked)').parent().removeClass("style_new").parent().removeClass("service-new");
        $('input[name=services]:checked').parent().addClass("style_new").parent().addClass("service-new");
    }


    function calpage() {

        var msg = "ok";

        if (ServiceId == "") {
            alert('Please select a Service!');
        }
            //check if any file upload or not
        else if (totalUpload > 0) {


            console.log("Hit Instruction Successful.");

            //display loding
            document.getElementById("load").style.display = "block";
            document.getElementById("Sendbtn").style.display = "none";

            console.log("loading gif.");

            try {
                //alert('hitted' + totalUpload);

                console.log('before Hit');
                var url = '@Url.Action("Instruction", "Home")';                  //"/Home/Instruction";

                var name = ServiceId; //pass parameter
                var Upload = TotalFile();
                //var Orderno = $("#OrderNo").val();

                var _OrderRef = $("#OrderRef").val();

                var Clientcode = $("#ClientCode").val();
                var user = $("#UserEmail").val();

                console.log('parameter' + name + ' total file' + Upload + ' Client Code:' + Clientcode + ' O Ref:' + _OrderRef + ' user:' + user);
                msg = "False";              

                $.ajax({

                    type: 'GET',
                    url: '@Url.Action("Instruction", "Home")',

                    data: {
                        serviceRef: name,
                        TotalFile: totalUpload,
                        OrderRef: _OrderRef,
                        ClientCode: Clientcode,
                        UserName: user

                    },
                    dataType: "html",
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8", // this is the default value, so it's optional

                    success: function (result) {
                        console.log("Instruction Response is ok");
                        document.getElementById("load").style.display = "none";
                        document.getElementById("Sendbtn").style.display = "block";
                        $("#target").html(result);
                        // jQuery("#someContainer").html(result); // result is the HTML text
                    },

                    error: function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.Try again.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404].Try again.';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].Try again.';
                        } else if (jqXHR.status === 504) {
                            msg = 'Gate way Time out problem.Try again';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.Try Again.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.Try Again';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.Try Again.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }

                        document.getElementById("load").style.display = "none";
                        document.getElementById("Sendbtn").style.display = "block";

                        alert("Error:" + msg);
                    }

                });

            } catch (err) {
                document.getElementById("load").style.display = "none";
                document.getElementById("Sendbtn").style.display = "block";
                console.log("Exception while calling Instruction.Exp:" + err.message + " " + err.name + " " + err.description);
            }

        } else {
            document.getElementById("load").style.display = "none";
            document.getElementById("Sendbtn").style.display = "block";
            alert('Please upload file...');
        }

    }


    (function () {
        var show = 'visible'; // state var toggled by interval
        var time = 500; // milliseconds between each interval

        setInterval(function () {
            // Toggle our visible state on each interval
            show = (show === 'hidden') ? 'visible' : 'hidden';

            // Get the cursor elements
            var cursors = document.getElementsByClassName('cursor');
            // We could do this outside the interval callback,
            // but then it wouldn't be kept in sync with the DOM

            // Loop through the cursor elements and update them to the current state
            for (var i = 0; i < cursors.length; i++) {
                cursors[i].style.visibility = show;
            }
        }, time);
    })()

</script>